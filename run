#!/usr/bin/env bash

######################################
# run
# Description: Script to use for create SSL Certificate Authority & SSL Domain Certificate signed
# Usage: ./run [create|open] [ca|domain] <ca> <domain name>
# Author: mbasri <mbasri.dev@outlook.com>
# Version: 1.0
######################################

RED='\033[1;31m'
GREEN='\033[1;32m'
BLACK='\033[1;30m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
PURPLE='\033[1;35m'
NC='\033[0m'

function help {
  printf "Description: Script to use for create SSL Certificate Authority & SSL Domain Certificate signed\n\n"
  printf "Command to use:\n"
	printf "${GREEN}${0}${NC} ${BLUE}[create|open] [ca|domain] <ca> <domain name>${NC}\n"
}

function display_info {
  printf "${BLUE}%-10s${NC} %b\n" "[INFO]" "${1}"
}

function display_debug {
  printf "${GREEN}%-10s${NC} %b\n" "[DEBUG]" "${1}"
}

function display_error {
  printf "${RED}%-10s${NC} %b\n" "[ERROR]" "${1}" >&2
}

# Load variables file [COUNTRY, STATE, CITY, ORGANISATION, ORGANISATION_UNIT, EMAIL, VALID_DAYS] 
function load_vars {
  source .vars
  if [ ! "${COUNTRY}" ] \
    || [ ! "${STATE}"  ] \
    || [ ! "${CITY}"  ] \
    || [ ! "${ORGANISATION}"  ] \
    || [ ! "${ORGANISATION_UNIT}"  ] \
    || [ ! "${EMAIL}"  ] \
    || [ ! "${VALID_DAYS}"  ]
  then
    display_error "Somethink wrong with the ${RED}variables file${NC}:"
    display_error "1. Please check if the file ${RED}'.vars'${NC} is present in Certificate Authority foler"
    display_error "2. Please check if the following variables is setted ${RED}[COUNTRY, STATE, CITY, ORGANISATION, ORGANISATION_UNIT, EMAIL, VALID_DAYS]${NC}"
    exit 1
  fi
}

CA="${3}"
DOMAIN_NAME="${4}"

case ${1} in
  "create")
    case ${2} in
      "ca")
        if [ -f certificates.d/${CA}/ca/${CA}.key ] || [ -f certificates.d/${CA}/ca/${CA}.crt ]
        then
          display_error "SSL Certificate Authority '${CA}' already exist"
          exit 1
        fi
        mkdir -p certificates.d/${CA}/ca
        cd certificates.d/${CA}
        load_vars
        cd ca
        openssl genrsa 4096 > ${CA}.key
        openssl req -new -x509 \
          -days ${VALID_DAYS} \
          -key ${CA}.key \
          -out ${CA}.crt \
          -subj "/C=${COUNTRY}/ST=${STATE}/L=${CITY}/O=${ORGANISATION}/OU=${ORGANISATION_UNIT}/emailAddress=${EMAIL}/CN=${CA}"
        if [ $? != 0 ]
        then 
          display_error KO
          exit
        fi
        display_info "CA '${CA}.crt' created"
      ;;

      "domain") 
        if [ -f certificates.d/${CA}/${DOMAIN_NAME}.${CA}/${DOMAIN_NAME}.${CA}.key ] || [ -f certificates.d/${CA}/${DOMAIN_NAME}.${CA}/${DOMAIN_NAME}.${CA}.csr ] || [ -f ${DOMAIN_NAME}.${CA}/${DOMAIN_NAME}.${CA}.crt ]
        then
          display_error "SSL Domain Certificate '${DOMAIN_NAME}.${CA}' already exist"
          exit 1
        fi
        if [ ! ${DOMAIN_NAME} ]
        then
          help
          exit 128;
        fi
        mkdir -p certificates.d/${CA}/${DOMAIN_NAME}.${CA}
        cd certificates.d/${CA}/
        load_vars
        cd ${DOMAIN_NAME}.${CA}
        openssl genrsa 4096 > ${DOMAIN_NAME}.${CA}.key
        openssl req -new \
        -days ${VALID_DAYS} \
        -key ${DOMAIN_NAME}.${CA}.key \
        -out ${DOMAIN_NAME}.${CA}.csr \
        -subj "/C=${COUNTRY}/ST=${STATE}/L=${CITY}/O=${ORGANISATION}/OU=${ORGANISATION_UNIT}/emailAddress=${EMAIL}/CN=${DOMAIN_NAME}.${CA}"
        if [ $? != 0 ]
        then
          display_error KO
          exit
        fi
        display_info "Domain Certificate '${DOMAIN_NAME}.${CA}.csr' created"

        display_info "Create a digital signature for '${DOMAIN_NAME}.${CA}' with CA '${CA}'"
        openssl x509 -req \
        -days ${VALID_DAYS} \
        -in ${DOMAIN_NAME}.${CA}.csr \
        -out ${DOMAIN_NAME}.${CA}.crt \
        -CA ../ca/${CA}.crt \
        -CAkey ../ca/${CA}.key \
        -CAcreateserial \
        -CAserial ${DOMAIN_NAME}.${CA}
        if [ $? != 0 ]
        then
          display_error KO
          exit
        fi
        display_info "Domain Certificate '${DOMAIN_NAME}.${CA}.crt' with CA signature created"
      ;;

      *)
        help
        exit 128;
      ;;
    esac
  ;;

  "open")
    if [ "$2" == "ca" ]
    then 
      openssl x509 -noout -text -in certificates.d/${CA}/ca/${CA}.crt
    elif [ "$2" == "domain" ]
    then
      openssl x509 -noout -text -in certificates.d/${CA}/${DOMAIN_NAME}.${CA}/${DOMAIN_NAME}.${CA}.crt
    else
      help
      exit 128
    fi
  ;;

  "remove") 
  ;;

  "help")
    help
  ;;

  *)
    help
  ;;
esac